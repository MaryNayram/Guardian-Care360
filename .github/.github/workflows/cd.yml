name: GuardianCare360 CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [develop]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: guardian-care360_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_DATABASE: guardian-care360_test
      DB_USERNAME: postgres
      DB_PASSWORD: postgres

    steps:
      - uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'

      - name: Install Composer dependencies
        working-directory: ./backend
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Run Laravel tests
        working-directory: ./backend
        run: php artisan test

  build-and-test-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: ./frontend
        run: npm test

  build-docker-images:
    runs-on: ubuntu-latest
    needs: [build-and-test-backend, build-and-test-frontend]
    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.REGISTRY_USERNAME }}/guardian-care360-backend:latest

      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.REGISTRY_USERNAME }}/guardian-care360-frontend:latest

  build-and-push-staging:
    runs-on: ubuntu-latest
    needs: build-docker-images
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend staging image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend staging image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:staging
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    runs-on: ubuntu-latest
    needs: build-and-push-staging
    if: github.event_name == 'pull_request' && github.base_ref == 'develop'
    steps:
      - name: Deploy backend to staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: "guardian-care360-backend-staging"
          images: ${{ env.BACKEND_IMAGE }}:staging

      - name: Deploy frontend to staging
        uses: azure/webapps-deploy@v2
        with:
          app-name: "guardian-care360-frontend-staging"
          images: ${{ env.FRONTEND_IMAGE }}:staging

  build-and-push-production:
    runs-on: ubuntu-latest
    needs: build-docker-images
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push backend production image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ env.BACKEND_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend production image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-production:
    runs-on: ubuntu-latest
    needs: build-and-push-production
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy backend to production
        uses: azure/webapps-deploy@v2
        with:
          app-name: "guardian-care360-backend"
          images: ${{ env.BACKEND_IMAGE }}:latest

      - name: Deploy frontend to production
        uses: azure/webapps-deploy@v2
        with:
          app-name: "guardian-care360-frontend"
          images: ${{ env.FRONTEND_IMAGE }}:latest

      - name: Update CHANGELOG
        run: |
          echo "## [$(date +%Y-%m-%d)] - $(date +%Y-%m-%d)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### Deployed" >> CHANGELOG.md
          echo "- Automated deployment from main branch" >> CHANGELOG.md

      - name: Commit and push CHANGELOG
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add CHANGELOG.md
          git commit -m "docs: update changelog for deployment"
          git push
